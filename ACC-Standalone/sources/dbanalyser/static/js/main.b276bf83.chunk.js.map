{"version":3,"sources":["serviceWorker.js","diagExplorer/SchemaAnalyzer.js","diagExplorer/DiagramExplorer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","SchemaAnalyzer","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","jsonData","score","currentStep","scoreFinal","react_default","a","createElement","Spinner","animation","nbAttributes","size","nbBigColumns","nbLinks","complexJoins","stringJoins","notUsedColumns","globalvars","loggerLevel","loglevel","API_ENDPOINT","apiEndpoint","rootSchema","analyzedepth","sampling","loadingProgress","scoringWeight","scoringThreshold","nextProps","logger","setState","loadJsonApi","forceUpdate","holderjs","run","pMessage","iLevel","console","log","sApiURL","_this2","axios","get","then","res","data","analyzeSchema","jsondata","schema_name","ratioNotUsedColumns","iCountMemoColumns","iCountNotUsedColumns","iCountComplexJoins","iCountRealLinks","iCountJoinparts","iCountStringJoins","i","j","k","l","nbattributes","attributes","fieldType","usageKPI","Workflows","JS","JSSP","Webapp","SQL","fieldInternalName","Math","round","iCountComplexJoinDetected","links","joinparts","source_name","indexOf","document","getElementById","style","display","open","encodeURIComponent","_this3","id","className","Navbar","bg","variant","Brand","href","onClick","closeAnalyzer","alt","src","width","height","CardDeck","Card","border","Img","Body","Title","Text","Footer","renderStackedChart","Component","DiagramExplorer","downloadDiagramFile","element","file","Blob","JSON","stringify","model","serializeDiagram","type","URL","createObjectURL","download","body","appendChild","click","saveGraphViaSerialize","bind","assertThisInitialized","restoreGraphViaSerialize","savedSerializedGraph","analyzerContainer","username","password","configPanelLoaded","jsonTargetMappings","columnsdepth","parseInt","displayLinks","preset","API_MAPPINGS_ENDPOINT","baseURL","jsspns","API_SCHEMA_ENDPOINT","schemaDocURL","selectedSchema","maxtoload","nodePosX","nodePosY","strSavedGraph","nocache","validated","loadMappingsApi","getSelectedItems","selectedItem","name","diagExplorer_SchemaAnalyzer","model2","DiagramModel","deSerializeDiagram","parse","engine","setDiagramModel","error","pFiles","reader","FileReader","onabort","onerror","onload","binaryStr","result","forEach","readAsBinaryString","startPosX","generateSchema","pMaxToLoad","_this4","mappings","nbMappings","values","length","iAlreadyLoaded","parsePreset","namespace","schemaname","nodes","getNodes","keys","tempNode","getNode","nbPorts","getPorts","x","y","sLinktoTheDoc","pModel","pNodeName","pNameSpace","pNodeType","_this5","iMapping","jsonMappingList","isMapping","sColorScheme","newNode","DefaultNodeModel","addNode","addListener","selectionChanged","pNode","isInput","sPortName","getPort","addPort","DefaultPortModel","pNamespace","pSchemaname","nodeSource","createNodeIfNotExist","schema_namespace","nodeSourcePortOut","createPortIfNotExist","iCountAttributes","iMaxAttributes","sAttributeName","fieldName","sAttributeType","addInPort","sListLoadSyntax","link_target_namespace","link_target","nodeDest","nodeDestPortIn","nodeDestPortOut","linkLabel","keySource","destination_name","link_unbound","linkLabelCardinality","link_external","link_reverselink_unbound","link_reverselink_external","linkLabelRoot","substr","getLinks","p","linkAlreadyExists","tempLabel","labels","label","newlink","link","addLabel","addLink","allNodes","n","ports","event","sUsername","value","sPassword","preventDefault","stopPropagation","sPresetList","getElementsByName","iColumnsDepth","iNbMappings","iAnalyzeDepth","sJsspNamespace","iLoggerLevel","bIsNoCache","checked","Number","isInteger","sURL","pathname","_this6","Form","noValidate","onSubmit","e","handleSubmit","Row","Label","column","sm","target","Group","as","Col","md","controlId","Control","placeholder","defaultValue","required","span","offset","Button","Table","striped","bordered","hover","xs","Check","handleConfigSave","ButtonToolbar","aria-label","ButtonGroup","zoomToFit","loadSelectedSchema","zoomInSchema","loadSchemaAnalyzer","getDocumentationURL","loadConfigPanel","ProgressBar","now","es","onDrop","acceptedFiles","loadDiagramFromFile","_ref","getRootProps","getInputProps","main","diagramEngine","DiagramEngine","installDefaultFactories","AppDiagramExplorer","parsed","require","search","baseurl","origin","rootschema","diagExplorer_DiagramExplorer","ReactDOM","render","App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b276bf83.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport holderjs from 'holderjs';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Spinner from 'react-bootstrap/Spinner'\n\n\nclass SchemaAnalyzer extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n        this.state = {\n            jsonData: [],\n            score: 10,\n            currentStep: \"Initializing ... It could take few minutes depending on number of columns.\",\n            scoreFinal: <Spinner animation=\"border\" />,\n            nbAttributes: <Spinner animation=\"border\" size=\"sm\" />,\n            nbBigColumns: <Spinner animation=\"border\" size=\"sm\" />,\n            nbLinks: <Spinner animation=\"border\" size=\"sm\" />,\n            complexJoins: <Spinner animation=\"border\" size=\"sm\" />,\n            stringJoins: <Spinner animation=\"border\" size=\"sm\" />,\n            notUsedColumns: <Spinner animation=\"border\" size=\"sm\" />\n        }; \n\n        this.globalvars = {\n            loggerLevel: this.props.loglevel, // 1=ERROR, 2=WARNING, 3=INFO, 4=DEBUG)\n            API_ENDPOINT: this.props.apiEndpoint + this.props.rootSchema + \"&analyze=\" + this.props.analyzedepth + \"&sampling=\" + this.props.sampling,\n            loadingProgress: 0,\n        };\n\n        this.scoringWeight= {\n            nbAttributes: 1,\n            nbBigColumns: 1,\n            nbLinks: 1,\n            complexJoins: 3,\n            notUsedColumns: 4\n        }\n\n        this.scoringThreshold= {\n            nbAttributes: 200,\n            nbBigColumns: 1,\n            nbLinks: 10,\n            complexJoins: 3,\n            stringJoins: 1,\n            notUsedColumns: 80 // % of not used columns \n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.logger(\"componentWillReceiveProps\", 3); \n\n        this.globalvars.API_ENDPOINT = this.props.apiEndpoint + nextProps.rootSchema + \"&analyze=\" + nextProps.analyzedepth + \"&sampling=\" + this.props.sampling;\n        this.setState ({\n            jsonData: [],\n            score: 10,\n            currentStep: \"Initializing ... It could take few minutes depending on number of columns.\",\n            scoreFinal: <Spinner animation=\"border\" size=\"sm\" />,\n            nbAttributes: <Spinner animation=\"border\" size=\"sm\" />,\n            nbBigColumns: <Spinner animation=\"border\" size=\"sm\" />,\n            nbLinks: <Spinner animation=\"border\" size=\"sm\" />,\n            complexJoins: <Spinner animation=\"border\" size=\"sm\" />,\n            stringJoins: <Spinner animation=\"border\" size=\"sm\" />,\n            notUsedColumns: <Spinner animation=\"border\" size=\"sm\" />\n        })\n\n        this.loadJsonApi(this.globalvars.API_ENDPOINT);\n        this.forceUpdate();\n    }\n    \n    componentDidMount() {\n    \n        this.logger(\"componentDidMount\", 3); \n        holderjs.run();\n        //this.logger(this.globalvars.API_ENDPOINT, 0);\n        this.loadJsonApi(this.globalvars.API_ENDPOINT);\n\n    }\n\n    logger(pMessage, iLevel){\n\n        if (iLevel <= this.globalvars.loggerLevel){\n            console.log(pMessage);\n        }\n    }\n\n    loadJsonApi (sApiURL){\n\n        axios.get(sApiURL).then ((res) => { \n         \n          this.logger(\"loading schema from \" + sApiURL, 3); \n    \n          //this.globalvars.jsonData = res.data;\n\n          this.setState({ \n            jsonData: res.data,\n            currentStep: \"Gathering Data...\"\n          });\n\n          //this.logger (this.state.jsonData, 0);\n\n          this.analyzeSchema ();\n    \n        }); \n    }\n\n    analyzeSchema (){\n\n        /* -------------------------------------------------------\n           \n            KPI list : \n                #1: More than [n] attributes Y/N\n                #2: Number of BIG columns (memo)\n                #3: More than [n] links \n                #4: Number of joins with more than 3 conditions\n                #5: Number of joins that use String typed columns\n                #6: Number of attributes that are not used (%)\n\n            ------------------------------------------------------ */\n        \n        var jsondata = this.state.jsonData;\n\n        if (!jsondata.schema_name){\n            this.logger(\"Json not loaded yet !!!\", 3);\n        } \n        else {\n            this.logger(\"Json loaded\", 3);\n        }  \n\n        this.logger(jsondata, 3);\n        this.logger(\"Schema Name: \" + jsondata.schema_name, 3);\n\n        var iCountMemoColumns = 0;\n        var iCountNotUsedColumns = 0;\n        var iCountComplexJoins = 0;\n        var iCountRealLinks = 0;\n        var iCountJoinparts = 0;\n        var iCountComplexJoins = 0;\n        var iCountStringJoins = 0;\n        var ratioNotUsedColumns = 0;\n        var i=0;\n        var j=0;\n        var k=0;\n        var l=0;\n        var m=0;\n\n        // #1: More than [n] attributes Y/N\n        if (jsondata.nbattributes > this.scoringThreshold.nbAttributes){\n            \n            this.logger(\"Many colmuns:\" + jsondata.nbattributes, 3);\n            this.setState ({\n                score: this.state.score - (1 * this.scoringWeight.nbAttributes)\n            })\n        }\n\n        // #2 Number of BIG columns (memo)\n        // #6: Number of attributes that are not used (%)\n\n        for (i in jsondata.attributes)\n        {\n            if (jsondata.attributes[i].fieldType == \"memo\" ){\n                iCountMemoColumns ++;\n            } \n\n            if (jsondata.attributes[i].usageKPI[0].Workflows == 0\n                && jsondata.attributes[i].usageKPI[0].JS == 0\n                && jsondata.attributes[i].usageKPI[0].JSSP == 0\n                && jsondata.attributes[i].usageKPI[0].Webapp == 0\n                && jsondata.attributes[i].usageKPI[0].SQL == 0\n                ){\n                this.logger( \"Column not used: \" +jsondata.attributes[i].fieldInternalName ,3);\n                iCountNotUsedColumns ++;\n            }  \n\n        }\n\n        if (iCountMemoColumns > this.scoringThreshold.nbBigColumns){\n            this.logger(\"Big colmuns detected\", 3);\n            this.setState ({\n                score: this.state.score - (1 * this.scoringWeight.nbBigColumns)\n            })\n        }\n        \n        this.logger(jsondata.nbattributes + \" - \" + iCountNotUsedColumns, 3);\n\n        ratioNotUsedColumns = Math.round((jsondata.nbattributes - iCountNotUsedColumns) * 100 / jsondata.nbattributes, 0);\n\n        if ((ratioNotUsedColumns) < this.scoringThreshold.notUsedColumns){\n            this.logger(\"Not Used colmuns detected\", 3);\n            this.setState ({\n                score: this.state.score - (1 * this.scoringWeight.notUsedColumns)\n            })\n        }\n\n        // #3: Number of joins with more than 3 conditions\n        // #4: More than [n] links \n        // #5: Number of joins that use String typed columns\n        \n        // for each links\n        var iCountComplexJoinDetected = false; \n\n        for (j in jsondata.links)\n        {\n            \n            iCountRealLinks ++;\n            iCountJoinparts = 0;\n            iCountComplexJoinDetected = false;\n\n            // For each link conditions\n            for (k in jsondata.links[j].joinparts)\n            {\n                \n                // Link on \"Current ...\" are ignored\n                if (!jsondata.links[j].joinparts[k].source_name){\n                    \n                    iCountRealLinks --;\n                    continue;\n                } else {\n                    iCountJoinparts ++;\n\n                    // if more than n join parts\n                    if (iCountJoinparts >= this.scoringThreshold.complexJoins){\n                        \n                        // search the type of the attribute\n                        for (l in jsondata.attributes)\n                        {\n                            if (jsondata.attributes[l].fieldInternalName == jsondata.links[j].joinparts[k].source_name)\n                            {\n                                \n                                // that includes a string column\n                                if (jsondata.attributes[l].fieldType.indexOf (\"string\") >= 0){\n                                    iCountStringJoins++;\n                                    this.logger(\"String Join found :\" + jsondata.links[j].joinparts[k].source_name + \"(\" + jsondata.attributes[l].fieldType + \")\", 3); \n\n                                    if (iCountStringJoins >= this.scoringThreshold.stringJoins){\n                                        iCountComplexJoins ++;\n                                        iCountComplexJoinDetected = true;\n                                        break;\n                                    }\n                                    \n                                }\n                            }\n                        }\n\n                        // When link is identified as complex then we can stop and jump to the next link\n                        if (iCountComplexJoinDetected) {\n                            break;\n                        }\n\n                    }\n                }\n            }\n        }\n\n\n        if (iCountComplexJoins > 0) {\n            this.logger(\"At least one Complex Join detected\", 0);\n            this.setState ({\n                score: this.state.score - (1 * this.scoringWeight.complexJoins)\n            })\n        }\n\n        if (iCountRealLinks > this.scoringThreshold.nbLinks){\n    \n            this.logger(\"Many links detected\" , 3);\n            this.setState ({\n                score: this.state.score - (1 * this.scoringWeight.nbLinks)\n            })\n        }\n\n        this.setState ({\n            nbAttributes: jsondata.nbattributes,\n            nbBigColumns: iCountMemoColumns,\n            nbLinks: iCountRealLinks,\n            complexJoins: iCountComplexJoins,\n            notUsedColumns: ratioNotUsedColumns + \" %\",\n            stringJoins: iCountStringJoins,\n            scoreFinal: this.state.score + \"/10\"\n        })\n        \n        //this.forceUpdate();\n\n        this.setState({ \n            currentStep: \"Analyze successful\"\n          });\n\n        return true;\n\n\n    }\n\n    closeAnalyzer(){\n        document.getElementById(\"main-analyzer\").style.display = \"none\";\n    }\n\n    renderStackedChart(){\n        window.open(\"columnDistributionChart.html?url=\" + encodeURIComponent(this.globalvars.API_ENDPOINT), \"_blank\");\n    }\n  \n    render() {\n\n      return (\n        <div id=\"main-analyzer-container\" className=\"main-container\">\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#\" onClick={()=>this.closeAnalyzer()}>\n                <img\n                    alt=\"\"\n                    src=\"close.png\"\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                />\n                {\" \" + this.props.rootSchema + \" (\" +  this.state.currentStep + \")\"}\n                </Navbar.Brand>\n            </Navbar>\n            <CardDeck>\n                <Card border=\"secondary\" style={{ width: '25rem' }}>\n                    <Card.Img variant=\"top\" src=\"holder.js/100px160?theme=sky&amp;text=Attributes&amp;size=24\" />\n                    <Card.Body>\n                    <Card.Title>Indicators</Card.Title>\n                    <Card.Text>\n                    <div>Number of attributes: <b>{this.state.nbAttributes}</b></div>\n                    <div>Number of Large attributes: <b>{this.state.nbBigColumns}</b></div>\n                    <div>Attributes overall usage propensity: <b>{this.state.notUsedColumns}</b></div>\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <a href=\"#\" onClick={()=>this.renderStackedChart()}><small className=\"text-muted\">Display Data Distribution</small></a>\n                    </Card.Footer>\n                </Card>\n                <Card border=\"secondary\" style={{ width: '25rem' }}>\n                    <Card.Img variant=\"top\" src=\"holder.js/100px160?theme=sky&amp;text=Links&amp;size=24\" />\n                    <Card.Body>\n                    <Card.Title>Indicators</Card.Title>\n                    <Card.Text>\n                    <div>Total number of joins: <b>{this.state.nbLinks}</b></div>\n                    <div>Number of complex joins: <b>{this.state.complexJoins}</b></div>\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">More details here</small>\n                    </Card.Footer>\n                </Card>\n                <Card border=\"secondary\" style={{ width: '25rem' }}>\n                    <Card.Img variant=\"top\" src=\"holder.js/100px160?theme=sky&amp;text=Design Scoring&amp;size=24\" />\n                    <Card.Body>\n                    <Card.Title><div className=\"text-center\">Overall Score</div></Card.Title>\n                    <Card.Text>\n                    <div className=\"text-center\"><font size=\"30\">{this.state.scoreFinal}</font></div>\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">More details here</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n\n        </div>\n      );\n\n     \n    }\n  }\n  \nexport default SchemaAnalyzer;","import React, { Component } from 'react';\nimport 'storm-react-diagrams/dist/style.min.css';\nimport axios from 'axios';\n//import * as beautify from \"json-beautify\";\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport SchemaAnalyzer from './SchemaAnalyzer';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport Dropzone from 'react-dropzone';\n\nimport {\n\tDiagramEngine,\n\tDiagramModel,\n\tDefaultNodeModel,\n\tLinkModel,\n  DefaultPortModel,\n  DiagramWidget,\n  DefaultLinkModel\n} from \"storm-react-diagrams\";\n\nclass DiagramExplorer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveGraphViaSerialize = this.saveGraphViaSerialize.bind(this);\n\t\tthis.restoreGraphViaSerialize = this.restoreGraphViaSerialize.bind(this);\n\n    this.savedSerializedGraph = \"\";\n\n    this.state = {\n      analyzerContainer: null,\n      username: \"\",\n      password: \"\",\n      configPanelLoaded: false\n    };\n\n    this.globalvars = {\n      jsonData: [],\n      jsonTargetMappings: [],\n      columnsdepth: parseInt(this.props.columnsdepth),\n      displayLinks: true,\n      preset: this.props.preset,\n      loggerLevel: this.props.loglevel, // 1=ERROR, 2=WARNING, 3=INFO, 4=DEBUG)\n      API_MAPPINGS_ENDPOINT: this.props.baseURL + \"/\" + this.props.jsspns + \"/diagramGetMappings.jssp?user=\" + this.props.username+ \"&password=\" + this.props.password,\n      API_SCHEMA_ENDPOINT: this.props.baseURL + \"/\" + this.props.jsspns + \"/diagramExplorer.jssp?user=\" + this.props.username + \"&password=\" + this.props.password + \"&schema=\",\n      schemaDocURL: this.props.baseURL + \"/xtk/schemaDocumentation.jssp?schema=\",\n      selectedSchema: this.props.rootSchema,\n      loadingProgress: 0,\n      maxtoload: parseInt(this.props.maxtoload),\n      nodePosX: 100,\n      nodePosY: 140,\n      strSavedGraph: \"\",\n      analyzedepth: this.props.analyzedepth,\n      nocache: this.props.nocache,\n      jsspns: this.props.jsspns\n    };\n\n    //http://localhost:3000/?config=config.json&columnsdepth=20&preset=custom&loglevel=0\n\n    this.logger(\"Initialize Diagram\", 3);\n    this.logger(\"MAX columns per node : \" + this.props.columnsdepth, 4);\n    this.logger(\"preset :  \" + this.props.preset, 4);\n    this.logger(\"log level : \" + this.props.loglevel, 4)\n    this.logger(\"Max target mappings to load : \" + this.props.maxtoload, 4);\n    this.logger(\"Analyze depth for workflows (nb days) : \" + this.props.analyzedepth, 4);\n    this.logger(\"No Cache : \" + this.props.nocache, 4);\n\n\n  }\n\n\n  componentDidMount() {\n\n    this.logger(\"componentDidMount\", 4);\n    this.logger(this.globalvars.API_MAPPINGS_ENDPOINT, 4);\n\n    if (this.props.username != \"\" && this.props.password != \"\"){\n\n      this.setState({\n        validated: true ,\n        username: this.props.username,\n        password: this.props.password\n      });\n\n      if (this.globalvars.selectedSchema){\n        this.logger(\"loading schema : \" + this.globalvars.selectedSchema, 3);\n        this.loadJsonApi(this.globalvars.API_SCHEMA_ENDPOINT + this.globalvars.selectedSchema);\n      } else {\n        this.logger(\"loading all schemas with a target mapping : \", 3);\n        this.loadMappingsApi(this.globalvars.API_MAPPINGS_ENDPOINT, this.globalvars.maxtoload);\n      }\n    }\n  }\n\n  loadSchemaAnalyzer(){\n\n    if (model.getSelectedItems()[0]){\n\n      var selectedItem = model.getSelectedItems()[0];\n\n      this.logger(\"Analyzing the node : \" + selectedItem.name, 3);\n\n      //this.setState({analyzerOpened: true});\n      document.getElementById(\"main-analyzer\").style.display = \"block\";\n      this.setState({analyzerContainer: <SchemaAnalyzer apiEndpoint={this.globalvars.API_SCHEMA_ENDPOINT} rootSchema={this.globalvars.selectedSchema} loglevel={this.globalvars.loggerLevel} analyzedepth={this.props.analyzedepth} sampling={this.props.sampling} nocache={this.props.nocache} />});\n    }\n  }\n\n  loadConfigPanel(){\n\n    if (this.state.configPanelLoaded) {\n\n      this.logger(\"Hide the advanced config panel\", 0);\n\n      this.setState({\n        configPanelLoaded: false\n      });\n\n      document.getElementById(\"main-configPanel\").style.display = \"none\";\n    } else {\n\n      this.logger(\"Display the advanced config panel\", 0);\n\n      this.setState({\n        configPanelLoaded: true\n      });\n\n      document.getElementById(\"main-configPanel\").style.display = \"block\";\n    }\n  }\n\n  saveGraphViaSerialize() {\n\n    this.globalvars.strSavedGraph = JSON.stringify(model.serializeDiagram());\n    this.logger(\"Diagram saved\", 3);\n\n  }\n\n  downloadDiagramFile = () => {\n\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(model.serializeDiagram())], {type: 'application/json'});\n    element.href = URL.createObjectURL(file);\n    element.download = \"diagramAnalyserSaved.json\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  restoreGraphViaSerialize() {\n\n    try {\n      var model2 = new DiagramModel();\n      model2.deSerializeDiagram(JSON.parse(this.globalvars.strSavedGraph), engine);\n      model = model2;\n      engine.setDiagramModel(model);\n      this.forceUpdate();\n      this.forceUpdate();\n    } catch (error) {\n      this.logger(\"Error while restoring the Diagram. No saved diagram to restore\", 0);\n    }\n\n  }\n\n  // Load Diagram from a File\n  loadDiagramFromFile(pFiles){\n\n    console.log(\"FILE READER\");\n\n    const reader = new FileReader()\n\n    reader.onabort = () => this.logger(\"file reading was aborted\", 3)\n    reader.onerror = () => this.logger(\"file reading has failed\", 3)\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      try {\n        const binaryStr = reader.result\n        var model2 = new DiagramModel();\n        model2.deSerializeDiagram(JSON.parse(binaryStr), engine);\n        model = model2;\n        engine.setDiagramModel(model);\n        this.forceUpdate();\n        this.forceUpdate();\n      } catch (error) {\n        this.logger(\"Error while parsing the Diagram. File not compatible. Loading aborted\", 1);\n      }\n\n    }\n\n    pFiles.forEach(file => reader.readAsBinaryString(file));\n\n  }\n\n  logger(pMessage, iLevel){\n\n      if (iLevel <= this.globalvars.loggerLevel){\n          console.log(pMessage);\n      }\n  }\n\n  loadJsonApi (sApiURL){\n\n    axios.get(sApiURL).then ((res) => {\n\n      this.logger(\"loading schema from \" + sApiURL, 3);\n\n      /*this.setState({\n        jsonData: res.data,\n        startPosX: this.globalvars.startPosX + 100\n      });*/\n\n      this.globalvars.jsonData = res.data;\n      this.globalvars.startPosX = this.globalvars.startPosX + 100;\n\n      this.generateSchema();\n      this.forceUpdate();\n\n    });\n  }\n\n  loadMappingsApi (sApiURL, pMaxToLoad){\n\n    axios.get(sApiURL).then ((res) => {\n\n      this.logger(\"loading mappings from \" + sApiURL, 3);\n      this.logger(res.data.mappings,3);\n\n      var nbMappings = Object.values(res.data.mappings).length;\n      this.logger(\"Nb Mappings to load: \" + nbMappings, 3);\n\n      var i=0;\n\n      // We store the mapping list to use custom RGB colors nodes afterwards\n      this.globalvars.jsonTargetMappings = res.data.mappings;\n\n      for (i in res.data.mappings)\n      {\n\n        var iAlreadyLoaded = false;\n\n        // Limit the number of root schema to load\n        if (i >= parseInt(pMaxToLoad)) {\n          //console.log(\"STOP : \" + i + \" : \" + pMaxToLoad);\n          this.globalvars.loadingProgress = 100;\n          break;\n        }\n\n\n        this.globalvars.loadingProgress = (parseInt(i)+1) * 100 / nbMappings;\n        this.logger(\"Loading \" + this.globalvars.loadingProgress + \"%\", 3);\n\n        // Filtering schema according to selected Preset\n        if (!this.parsePreset(res.data.mappings[i].namespace, res.data.mappings[i].schemaname)) {\n          continue;\n        }\n\n        this.logger(\"Canditate mapping schemas : \" + res.data.mappings[i].namespace + \":\" + res.data.mappings[i].schemaname, 3);\n\n        // Search Node\n        var nodes = model.getNodes();\n        var j = 0;\n\n        // Are the nodes loaded already?\n        for (j in Object.keys(nodes))\n        {\n\n          let tempNode = model.getNode(nodes[Object.keys(nodes)[j]]);\n\n          if (tempNode.name == res.data.mappings[i].namespace + \":\" + res.data.mappings[i].schemaname)\n          {\n            var nbPorts = Object.values(tempNode.getPorts()).length;\n            this.logger(\"Node to load matches with existing node: \" + tempNode.name, 3);\n            this.logger(\"Existing node has \" + nbPorts + \" nodes\", 3);\n\n            // Prevent multiple loading of a schema\n            if(nbPorts > 2) {\n              iAlreadyLoaded = true;\n              break;\n            }\n          }\n        }\n\n        // We load only once\n        if (!iAlreadyLoaded){\n\n          this.logger(\"loading mapping schema : \" + res.data.mappings[i].namespace + \":\" + res.data.mappings[i].schemaname, 3);\n          this.loadJsonApi(this.globalvars.API_SCHEMA_ENDPOINT + res.data.mappings[i].namespace + \":\" + res.data.mappings[i].schemaname);\n\n        } else {\n          this.logger(\"ABORTING loading mapping schema : \" + res.data.mappings[i].namespace + \":\" + res.data.mappings[i].schemaname, 3);\n        }\n\n      }\n\n    });\n  }\n\n\n  loadSelectedSchema(){\n\n    if (model.getSelectedItems()[0]){\n\n      //this.saveGraphViaSerialize();\n\n      var selectedItem = model.getSelectedItems()[0];\n\n      //this.globalvars.nodePosX += 200;\n      //this.globalvars.nodePosX = this.globalvars.nodePosY + 50;\n      this.globalvars.nodePosX = selectedItem.x + 300;\n      this.globalvars.nodePosY = selectedItem.y;\n\n      //selectedItem.clearListeners();\n\n      var nbPorts = Object.values(selectedItem.getPorts()).length;\n      this.logger(nbPorts, 4);\n\n      // Prevent multiple loading of a schema\n      if(nbPorts <= 2) {\n\n        this.logger(\"Loading the node : \" + selectedItem.name, 3);\n        this.loadJsonApi(this.globalvars.API_SCHEMA_ENDPOINT + selectedItem.name);\n        //engine.setDiagramModel(model);\n        //this.forceUpdate();\n\n      } else {\n\n        this.logger(\"ABORTING Loading the node : \" + selectedItem.name, 3);\n\n      }\n    }\n  }\n\n  getDocumentationURL (){\n\n    var sLinktoTheDoc = this.globalvars.schemaDocURL + this.globalvars.selectedSchema;\n    this.logger(sLinktoTheDoc, 3);\n    return sLinktoTheDoc;\n\n  }\n\n\n  createNodeIfNotExist (pModel, pNodeName, pNameSpace, pNodeType){\n\n    // Search Node\n    var nodes = pModel.getNodes();\n    var i = 0;\n\n    for (i in Object.keys(nodes))\n    {\n      let tempNode = pModel.getNode(nodes[Object.keys(nodes)[i]]);\n\n      if (tempNode.name == pNodeName)\n      {\n        //this.logger(\"POSITION of \" + pNodeName + '=' + pPosX, 4);\n        if(this.globalvars.nodePosY > 120) {\n          this.globalvars.nodePosY -= 10;\n        }\n        return tempNode;\n      }\n\n    };\n\n    // Test is the node is a target mapping then it will have a specific color\n\n    var iMapping = 0;\n    var jsonMappingList = this.globalvars.jsonTargetMappings;\n    var sMappingSchemaName = \"\";\n    var isMapping = false;\n    var sColorScheme = \"\";\n\n    for (iMapping in jsonMappingList){\n\n    /*\n      console.log (\"*** Target Mapping scanning ***\");\n      console.log (\"#1 \" + jsonMappingList[iMapping].namespace + \":\" + jsonMappingList[iMapping].schemaname);\n      console.log (\"#2 \" + pNameSpace + \":\" + pNodeName);\n    */\n\n      sMappingSchemaName = jsonMappingList[iMapping].namespace + \":\" + jsonMappingList[iMapping].schemaname;\n\n      if (sMappingSchemaName == pNodeName){\n        this.logger(\"Node \" + pNameSpace + \":\" + pNodeName + \" is a target mapping\", 3);\n        isMapping = true;\n        break;\n      }\n\n    }\n\n    if (isMapping){\n      sColorScheme = \"rgb(245,91,91)\";\n    } else if (pNameSpace == \"nms\"){\n      sColorScheme = \"rgb(0,192,255)\";\n    } else if (pNameSpace == \"xtk\") {\n      sColorScheme = \"rgb(200,100,200)\";\n    } else {\n      sColorScheme = \"rgb(255,192,0)\";\n    }\n\n    var newNode = new DefaultNodeModel(pNodeName, sColorScheme);\n    this.globalvars.nodePosY += 50;\n    newNode.x = this.globalvars.nodePosX;\n    newNode.y = this.globalvars.nodePosY;\n    pModel.addNode(newNode);\n\n    this.logger(\"POSITION of \" + pNodeName + ' X:' + this.globalvars.nodePosX + \" Y:\" + this.globalvars.nodePosY, 4);\n\n    // add a selection listener to each\n    newNode.addListener({\n       selectionChanged: () => {\n          this.globalvars.selectedSchema = newNode.name;\n          this.logger(\"Selected item is : \" + this.globalvars.selectedSchema, 4);\n        }\n      });\n\n    if (pNodeType == \"source\"){\n      this.globalvars.nodePosX += 400;\n      this.globalvars.nodePosY = 120;\n    }\n\n    if (this.globalvars.nodePosY > 2500){\n      this.globalvars.nodePosX += 400;\n      this.globalvars.nodePosY = 120;\n    }\n\n    return newNode;\n  }\n\n  createPortIfNotExist(pNode, isInput){\n\n    //console.log(pNode);\n\n    var sPortName = \"\";\n    if (isInput) {\n\n      sPortName = \"<\";\n\n    } else {\n\n      sPortName = \">\"\n\n    }\n\n    if (pNode.getPort(sPortName)) {\n\n      //console.log(pNode);\n      return pNode.getPort(sPortName);\n\n    }\n    else {\n\n      return pNode.addPort(new DefaultPortModel(isInput, sPortName, sPortName));\n\n    }\n\n  }\n\n  /*\n      Displaying all schemas does not make sense everytime (there are too many !!!)\n      Several presets help to display schemas according\n      #1 : custom : All Custom schemas + tracking, broadlog & delivery\n      #2 : Standard : All custom schemas + all nms schemas\n      #3 : Any other value : All schemas\n  */\n  parsePreset(pNamespace, pSchemaname){\n\n    if (this.globalvars.preset == \"custom\"\n        && (pNamespace == \"xtk\")\n        || (pNamespace == \"nms\" && !(pSchemaname == \"trackingLogRcp\"\n                                  || pSchemaname == \"broadLogRcp\"\n                                  || pSchemaname == \"recipient\"\n                                  || pSchemaname == \"delivery\"\n                                  || pSchemaname == \"operation\"\n                                  || pSchemaname == \"subscription\")\n            )\n    ){\n      this.logger(\"===> Filtered schema by preset : \" + pNamespace + \":\" + pSchemaname, 4);\n      return false;\n    } else if (this.globalvars.preset == \"standard\" && (pNamespace == \"xtk\")){\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n\n  /*  ---------------------------------------------\n      Explore Schema & links to set up diagram nodes\n      --------------------------------------------- */\n  generateSchema(){\n\n\n\n    //var jsondata = require(\"./jsonfiles/\" + pSchameName + \".json\");\n    var jsondata = this.globalvars.jsonData;\n\n\t\tthis.logger(\"===> GenerateSchema jsondata : \" +  jsondata, 4);\n\n\t\tthis.logger(\"===> GenerateSchema for: \" +  jsondata.schema_name, 4);\n\n\t\tif (!jsondata.schema_name) return false;\n\n    //var iNodeSourcePosX=this.globalvars.startPosX;\n    //var iNodeSourcePosY=200;\n\n    var nodeSource = this.createNodeIfNotExist (model, jsondata.schema_namespace + \":\" + jsondata.schema_name, jsondata.schema_namespace, \"source\");\n    //nodeSource.clearListeners(); // no action on root node\n\n    var nodeSourcePortIn = this.createPortIfNotExist(nodeSource, true);\n    var nodeSourcePortOut = this.createPortIfNotExist(nodeSource, false);\n\n    var iCountAttributes = 0;\n    var iMaxAttributes = this.globalvars.columnsdepth;\n    this.logger(\"MAX COLUMNS TO DISPLAY : \" + iMaxAttributes, 3);\n\n\n    for (i in jsondata.attributes)\n    {\n\n      iCountAttributes ++;\n\n      //console.log(i);\n\n      var sAttributeName = jsondata.attributes[i].fieldName;\n      var sAttributeType = jsondata.attributes[i].fieldType;\n      //nodeSource.addInPort(sAttributeName + \" (\" +sAttributeType + \")\");\n\n      if (i > iMaxAttributes) {\n        nodeSource.addInPort(\"... (Limit to \" + iMaxAttributes + \". Other fields filtered...)\");\n        break;\n      } else {\n        nodeSource.addInPort(sAttributeName + \" (\" +sAttributeType + \")\");\n      }\n\n    }\n\n    //engine.setDiagramModel(model);\n    //return false;\n\n    var i=0;\n    var j=0;\n\n    //var iNodeDestPosX=iNodeSourcePosX+600;\n    //var iNodeDestPosY=170;\n\n    var sListLoadSyntax = \"\";\n\n    for (i in jsondata.links)\n    {\n\n\n      // Link on \"Current ...\" are ignored\n      if (!jsondata.links[i].joinparts[0].source_name){\n        continue;\n      }\n\n      this.logger(jsondata.links[i].link_target_namespace + \":\" + jsondata.links[i].link_target + \" => \" + iCountAttributes, 4);\n\n      // Filtering schema according to selected Preset\n      if (!this.parsePreset(jsondata.links[i].link_target_namespace, jsondata.links[i].link_target)) {\n        continue;\n      }\n\n      //sListLoadSyntax = sListLoadSyntax + 'this.loadJsonApi(API_SCHEMA_ENDPOINT + \"' + jsondata.links[i].link_target_namespace + ':' + jsondata.links[i].link_target + '\");\\n';\n      sListLoadSyntax = sListLoadSyntax + \"{\\n\";\n      sListLoadSyntax = sListLoadSyntax + '\"namespace\":\"' + jsondata.links[i].link_target_namespace + '\",\\n';\n      sListLoadSyntax = sListLoadSyntax + '\"schema\":\"' + jsondata.links[i].link_target + '\"\\n';\n      sListLoadSyntax = sListLoadSyntax + \"},\\n\";\n\n      var nodeDest = this.createNodeIfNotExist (model, jsondata.links[i].link_target_namespace + \":\" + jsondata.links[i].link_target, jsondata.links[i].link_target_namespace, \"dest\");\n      var nodeDestPortIn = this.createPortIfNotExist(nodeDest, true);\n      var nodeDestPortOut = this.createPortIfNotExist(nodeDest, false);\n\n      this.logger(nodeDestPortOut, 4);\n\n      /* --------------------------\n          Assign labels to links\n        -------------------------- */\n      var linkLabel = \"\";\n\n      for (j in jsondata.links[i].joinparts)\n      {\n          this.logger(\"====>\" + jsondata.links[i].joinparts[j].source_name, 3);\n\n          if (jsondata.links[i].joinparts[j].source_name){\n            var keySource = jsondata.links[i].joinparts[j].source_name;\n          } else {\n            var keySource = jsondata.links[i].joinparts[j].destination_name;\n            this.logger(\"NO EXPLICIT SOURCE for \" + jsondata.links[i].link_target, 3);\n          }\n\n          var keyDestination = jsondata.links[i].joinparts[j].destination_name;\n\n          if (linkLabel != \"\"){\n            linkLabel = linkLabel + \" AND \";\n          }\n          linkLabel = linkLabel + keySource + \"=\" + keyDestination;\n\n          //nodeSource.addPort(new DefaultPortModel(false, keySource, keySource));\n          //nodeDest.addPort(new DefaultPortModel(true, keyDestination, keyDestination));\n      }\n\n      // Display Link Cardinality\n      this.logger(\"+++++++++++++\", 4);\n      this.logger(\"LINK from \" + jsondata.schema_name + \" TO \" + jsondata.links[i].link_target + \" is Unbound : \" + jsondata.links[i].link_unbound, 4);\n\n      // IN PROGRESS\n\n      var linkLabelCardinality = \"\";\n      if(jsondata.links[i].link_unbound == \"true\"){\n        linkLabelCardinality = linkLabelCardinality + \" [1-N]\";\n      }\n      else if (jsondata.links[i].link_external == \"true\") {\n        linkLabelCardinality = linkLabelCardinality + \" [0-1]\";\n      }\n      else {\n        linkLabelCardinality = linkLabelCardinality + \" [1-1]\";\n      }\n\n      if(jsondata.links[i].link_reverselink_unbound == \"true\"){\n        linkLabelCardinality = linkLabelCardinality + \" [1-N]\";\n      } else if(jsondata.links[i].link_reverselink_external == \"true\"){\n        linkLabelCardinality = linkLabelCardinality + \" [0-1]\";\n      } else {\n        linkLabelCardinality = linkLabelCardinality + \" [1-1]\";\n      }\n\n      var linkLabel = linkLabel + linkLabelCardinality;\n      var linkLabelRoot = linkLabel.substr(0, linkLabel.indexOf(\" [\"));\n\n      //this.logger(linkLabel,0);\n\n      var links = Object.values(nodeSource.getPort(\"<\").getLinks());\n      var p = 0;\n      var linkAlreadyExists = false;\n\n      //this.logger(\"1: \"  +linkLabel, 0);\n\n      for (p in links)\n      {\n        var tempLabel = links[p].labels[0].label;\n        this.logger(\"OLD LABEL \" + i + \" : \" + tempLabel, 4);\n        var tempLabelRoot = tempLabel.substr(tempLabel.indexOf(\"=\")+1, tempLabel.indexOf(\" [\")-2 - tempLabel.indexOf(\"=\")+1)\n                            + \"=\" + tempLabel.substr(0, tempLabel.indexOf(\"=\"));\n\n        //this.logger(links[p].labels[0], 0);\n\n        if (tempLabelRoot == linkLabelRoot){\n\n          linkAlreadyExists = true;\n          var oldLink = links[p];\n\n          this.logger(\"====> LINK EXISTS ALREADY \" + tempLabel + \" \" + linkLabel, 4);\n          break;\n          //this.logger(links[p].labels[0],2);\n        }\n      };\n\n      if (linkAlreadyExists){\n        //oldLink.labels[0].setLabel(tempLabel + linkLabelCardinality);\n        this.logger(\"EDITION ANCIEN LIEN : \" + tempLabel ,4);\n      }\n      else{\n        var newlink= nodeSourcePortOut.link(nodeDestPortIn);\n        newlink.addLabel(linkLabel);\n        model.addLink(newlink);\n        this.logger(\"CREATION NOUVEAU LIEN : \" + linkLabel,4);\n      }\n\n    }\n\n    // Display the loadJson calls syntax for linked schemas\n    this.logger(sListLoadSyntax, 4);\n\n    // Display all links of the schama\n    if (!this.globalvars.displayLinks)\n    {\n      // ICI on scanne les nodes avec un port unique et on les vire\n      var allNodes = model.getNodes()\n      var n = 0;\n\n      for (n in Object.keys(allNodes))\n      {\n        var tempNode = model.getNode(allNodes[Object.keys(allNodes)[n]]);\n        //var allPorts = tempNode.getPorts();\n\n        if (Object.keys(tempNode.ports).length == 1)\n        {\n            this.logger(\"to remove : \" + tempNode.name, 4);\n        }\n\n      };\n    }\n\n    engine.setDiagramModel(model);\n    this.forceUpdate();\n  }\n\n  handleSubmit(event) {\n    //const form = event.target.values;\n    var sUsername = document.getElementById(\"validationUsername\").value;\n    var sPassword = document.getElementById(\"validationPassword\").value;\n\n    if (sUsername && sPassword) {\n\n      this.globalvars.API_MAPPINGS_ENDPOINT = this.props.baseURL + \"/\" + this.globalvars.jsspns + \"/diagramGetMappings.jssp?user=\" + sUsername + \"&password=\" + sPassword;\n      this.globalvars.API_SCHEMA_ENDPOINT = this.props.baseURL + \"/\" + this.globalvars.jsspns + \"/diagramExplorer.jssp?user=\" + sUsername + \"&password=\" + sPassword + \"&schema=\";\n      this.logger(this.globalvars.API_MAPPINGS_ENDPOINT, 4);\n      this.setState({\n        validated: true ,\n        username: sUsername,\n        password: sPassword\n      });\n\n      if (this.globalvars.selectedSchema){\n        this.logger(\"Diagram loaded already, DO NOTHING ELSE AT LOGGING\", 3);\n        //this.loadSelectedSchema();\n      } else {\n        this.logger(\"loading all schemas with a target mapping : \", 3);\n        this.loadMappingsApi(this.globalvars.API_MAPPINGS_ENDPOINT, this.globalvars.maxtoload);\n      }\n\n    } else {\n      this.setState({ validated: false });\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  handleConfigSave(){\n\n    this.logger(\"Saving config from Panel\", 3);\n\n    //const form = event.target.values;\n    var sPresetList = document.getElementsByName(\"radioPreset\");\n    var sPreset = \"\";\n    var iColumnsDepth = parseInt(document.getElementsByName(\"columnDepth\")[0].value);\n    var iNbMappings = parseInt(document.getElementsByName(\"nbmappings\")[0].value);\n    var iAnalyzeDepth = parseInt(document.getElementsByName(\"analyzedepth\")[0].value);\n    var sJsspNamespace = document.getElementsByName(\"jsspnamespace\")[0].value;\n    var iLoggerLevel = parseInt(document.getElementsByName(\"loggerlevel\")[0].value);\n    var bIsNoCache = document.getElementsByName(\"isnocache\")[0].checked;\n\n    for (var i = 0; i < sPresetList.length; ++i) {\n\n      if (sPresetList[i].checked){\n\n        sPreset = sPresetList[i].value;\n        this.globalvars.preset = sPresetList[i].value;\n        this.logger(\"New value for preset: \" + sPresetList[i].value, 3);\n        break;\n\n      }\n\n    }\n\n    if (sJsspNamespace.length == 3){\n      this.logger(\"New value for JSSP default namespace: \" + sJsspNamespace, 3);\n      this.globalvars.jsspns = sJsspNamespace;\n    } else {\n      this.logger(\"BAD value for JSSP default namespace: Requires a 3 letters string\", 3);\n    }\n\n    if (Number.isInteger(iColumnsDepth)){\n      this.logger(\"New value for Column Depth: \" + iColumnsDepth, 3);\n      this.globalvars.columnsdepth = iColumnsDepth;\n    } else {\n      this.logger(\"BAD value for Column Depth: Requires an Integer\", 3);\n    }\n\n    if (Number.isInteger(iNbMappings)){\n      this.logger(\"New value for Nb Mappings: \" + iNbMappings, 3);\n      this.globalvars.maxtoload = iNbMappings;\n    } else {\n      this.logger(\"BAD value for Nb Mappings: Requires an Integer\", 3);\n    }\n\n    if (Number.isInteger(iAnalyzeDepth)){\n      this.logger(\"New value for Analyze Depth: \" + iAnalyzeDepth, 3);\n      this.globalvars.analyzedepth = iAnalyzeDepth;\n    } else {\n      this.logger(\"BAD value for Analyze Depth: Requires an Integer\", 3);\n    }\n\n    if (Number.isInteger(iLoggerLevel) && iLoggerLevel >= 0 && iLoggerLevel <= 4){\n      this.logger(\"New value for Logger Level: \" + iLoggerLevel, 3);\n      this.globalvars.loggerLevel = iLoggerLevel;\n    } else {\n        this.logger(\"BAD value for Column Depth: Require an Integer between 0 and 4\", 3);\n    }\n\n    if(bIsNoCache) {\n      this.logger(\"New value for no cache: \" + bIsNoCache, 3);\n      this.globalvars.nocache = \"true\";\n    } else {\n      this.logger(\"New value for no cache: \" + bIsNoCache, 3);\n      this.globalvars.nocache = \"false\";\n    }\n\n\n    // We close the config panel\n    document.getElementById(\"main-configPanel\").style.display = \"none\";\n    this.setState({\n      configPanelLoaded: false\n    });\n\n  }\n\n  zoomInSchema(){\n\n    var sURL = window.location.pathname + \"?baseurl=\" + encodeURIComponent(this.props.baseURL) + \"&rootschema=\" + this.globalvars.selectedSchema + \"&columnsdepth=\" + this.globalvars.columnsdepth + \"&preset=\" + this.globalvars.preset + \"&loglevel=\" + this.globalvars.loggerLevel + \"&nocache=\" + this.globalvars.nocache + \"&analyzedepth=\" + this.globalvars.analyzedepth + \"&username=\" + this.state.username + \"&password=\" + this.state.password;\n    console.log(sURL);\n    window.open(sURL);\n\n  }\n\n\n  render() {\n\n    this.logger(\"Rendering\", 1);\n\n    const { validated } = this.state;\n\n    return (\n\n      <div>\n        <div className=\"main-menu-bar\">\n          <h5>&nbsp;Adobe Campaign Database Diagram Analyzer V1.6 (3rd of August)</h5>\n          <div>\n            <Form noValidate validated={validated} onSubmit={e => this.handleSubmit(e)}>\n              <Form.Row>\n                <Col>\n                  <Form.Label column sm={100}>\n                    &nbsp;Instance:&nbsp;<a target=\"_blank\" href={this.props.baseURL}>{this.props.baseURL}</a>&nbsp;&nbsp;\n                  </Form.Label>\n                </Col>\n                <Col>\n                  <Form.Group as={Col} md=\"3\" controlId=\"validationUsername\">\n                    <Form.Control type=\"text\" placeholder=\"username\" defaultValue={this.state.username} required />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group as={Col} md=\"3\" controlId=\"validationPassword\">\n                    <Form.Control type=\"password\" placeholder=\"password\" defaultValue={this.state.password} required />\n                  </Form.Group>\n                </Col>\n                <Col sm={{ span: 10, offset: 2 }}>\n                  <Button type=\"submit\">Sign in</Button>\n                </Col>\n              </Form.Row>\n            </Form>\n          </div>\n          <div id=\"main-analyzer\" className=\"main-analyzer\">{this.state.analyzerContainer}</div>\n          <div id=\"main-configPanel\" className=\"main-configPanel\">\n            <Table striped bordered hover variant=\"dark\" size=\"sm\">\n              <tr>\n                <td>\n                  <Form>\n                    <Form.Group as={Row} controlId=\"configMappings\">\n                      <Form.Row>\n                        <Form.Label column xs={4}>Preset:</Form.Label>\n                        <Col xs={4}>\n                          <Form.Group as={Row}>\n                            <Col sm={10}>\n                              <Form.Check\n                                type=\"radio\"\n                                label=\"Custom\"\n                                name=\"radioPreset\"\n                                id=\"radioPresetCustom\"\n                                value=\"custom\"\n                              />\n                              <Form.Check\n                                type=\"radio\"\n                                label=\"Standard\"\n                                name=\"radioPreset\"\n                                id=\"radioPresetStandard\"\n                                value=\"standard\"\n                              />\n                              <Form.Check\n                                type=\"radio\"\n                                label=\"ALL\"\n                                name=\"radioPreset\"\n                                id=\"radioPresetALL\"\n                                value=\"ALL\"\n                              />\n                            </Col>\n                          </Form.Group>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"configColumnDepth\">\n                      <Form.Row>\n                        <Form.Label column xs={4}>Max Colunms to load:</Form.Label>\n                        <Col xs={4}>\n                          <Form.Control name=\"columnDepth\" type=\"text\" defaultValue={this.globalvars.columnsdepth} required/>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"configMappings\">\n                      <Form.Row>\n                        <Form.Label column xs={4}>Max Mappings to load:</Form.Label>\n                        <Col xs={4}>\n                          <Form.Control name=\"nbmappings\" type=\"text\" defaultValue={this.globalvars.maxtoload} required/>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"configAnalyze\">\n                      <Form.Row>\n                        <Form.Label column xs={4}>Analyze depth (nb days):</Form.Label>\n                        <Col xs={4}>\n                          <Form.Control name=\"analyzedepth\" type=\"text\" defaultValue={this.globalvars.analyzedepth} required/>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"configJsspNamespace\">\n                      <Form.Row>\n                        <Form.Label column xs={4}>JSSP default namespace (ex: xtk):</Form.Label>\n                        <Col xs={4}>\n                          <Form.Control name=\"jsspnamespace\" type=\"text\" defaultValue={this.globalvars.jsspns} required/>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"configLogger\">\n                      <Form.Row>\n                        <Form.Label column xs={4}>logger lever (0,1,2,3 or 4):</Form.Label>\n                        <Col xs={4}>\n                          <Form.Control name=\"loggerlevel\" type=\"text\" defaultValue={this.globalvars.loggerLevel} required/>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formNoCache\">\n                      <Col sm={{ span: 10, offset: 2 }}>\n                        <Form.Check name=\"isnocache\" label=\"No Cache\" />\n                      </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                      <Col sm={{ span: 10, offset: 2 }}>\n                        <Button type=\"button\" onClick={() => this.handleConfigSave()}>Save</Button>\n                      </Col>\n                    </Form.Group>\n                  </Form>\n                </td>\n              </tr>\n            </Table>\n          </div>\n          <div>\n            <ButtonToolbar aria-label=\"Actions\">\n              <ButtonGroup className=\"mr-2\" aria-label=\"Actions group 1\">\n                  <Button variant=\"outline-secondary\" onClick={() => engine.zoomToFit()}>Fit to Screen</Button>\n                  <Button variant=\"outline-success\"   onClick={() => this.loadSelectedSchema()}>Explore Selected Schema</Button>\n                  <Button variant=\"outline-primary\"   onClick={() => this.zoomInSchema()}>Zoom in selection</Button>\n                  <Button variant=\"outline-dark\"      onClick={() => this.loadSchemaAnalyzer()}>Analyze Schema</Button>\n                  <Button variant=\"outline-success\"   onClick={() => this.saveGraphViaSerialize()} >Save Diagram</Button>\n                  <Button variant=\"outline-success\"   onClick={() => this.restoreGraphViaSerialize()} >Undo action</Button>\n                  <Button variant=\"outline-success\"   onClick={this.downloadDiagramFile}>Export Diagram</Button>\n                  <Button variant=\"outline-info\"      onClick={() => window.open(this.getDocumentationURL(), \"_blank\")}>Schema Documentation</Button>\n                  <Button variant=\"outline-danger\"    onClick={() => window.open(window.location.pathname + \"?baseurl=\" + this.props.baseURL + \"&jsspns=\" + this.globalvars.jsspns + \"&columnsdepth=\" + this.globalvars.columnsdepth +  \"&maxtoload=\" + this.globalvars.maxtoload + \"&preset=\" + this.globalvars.preset + \"&loglevel=\" + this.globalvars.loggerLevel + \"&analyzedepth=\" + this.globalvars.analyzedepth + \"&nocache=\" + this.globalvars.nocache + \"&username=\" + this.state.username + \"&password=\" + this.state.password, \"_self\")}>Reset Diagram</Button>\n                  <Button variant=\"outline-danger\"    onClick={() => this.loadConfigPanel()} >Advanced Config</Button>\n              </ButtonGroup>\n            </ButtonToolbar>\n            <ProgressBar now={this.globalvars.loadingProgress} />\n          </div>\n          <div className=\"main-dropzone\">\n              <Dropzone onDrop={acceptedFiles => this.loadDiagramFromFile(acceptedFiles)}>\n              {({getRootProps, getInputProps}) => (\n                <section>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    LOAD A DIAGRAM => Drag a JSON file here, or click to select file ...\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n            </div>\n        </div>\n        <div><DiagramWidget diagramEngine={engine}/></div>\n      </div>\n    );\n  }\n}\n\n//1) setup the diagram engine\nvar engine = new DiagramEngine();\nengine.installDefaultFactories();\n\n//2) setup the diagram model\nvar model = new DiagramModel();\n\nexport default DiagramExplorer;\n","import React from 'react';\nimport DiagramExplorer from './diagExplorer/DiagramExplorer';\n\nfunction AppDiagramExplorer() {\n\n  const queryString = require('query-string');\n  //console.log(window.location.search);\n\n  const parsed = queryString.parse(window.location.search);\n  var baseURL = \"\";\n\n  if (!parsed.baseurl == true){\n\n    baseURL = window.location.origin;\n  } else {\n    baseURL = parsed.baseurl;\n  }\n\n  const rootSchema = parsed.rootschema;  // The root schema to start a Diagram exploration from\n  const columnsdepth = parsed.columnsdepth; // Nb of columns per schema to display\n  const preset = parsed.preset; // Custom, Standard, ALL\n  const loglevel = parsed.loglevel; // 0, 1, 2, 3 or 4\n  const maxtoload = parsed.maxtoload; // Nb of targeting dimension (aka mapping) to load while Diagram initializes\n  const analyzedepth = parsed.analyzedepth; // Ex: 30 means How many workflows that run over the last 30 days refenreces the atteibute\n  const sampling = parsed.sampling; // Sampling ratio (ex: 30 means the analyzer only compute 70% of the attributes. Other are random values)\n  const username = parsed.username; // AC instance login\n  const password = parsed.password; // AC Instance password (AqszDmmP8dedfr214xWoO0)\n  const nocache = parsed.nocache; // Force the analyzer to recompute all KPI\n  var jsspns = \"\";\n  if (parsed.jsspns) {\n    jsspns = parsed.jsspns; // namespace from where JSSP files are deployed from the AC instance (ex: acx, xtk, etc. ...)\n  } else {\n    jsspns = \"xtk\"; // default value\n  }\n\n  return (\n    <DiagramExplorer baseURL={baseURL}  jsspns={jsspns} rootSchema={rootSchema} columnsdepth={columnsdepth} preset={preset} loglevel={loglevel} maxtoload={maxtoload} analyzedepth={analyzedepth} sampling={sampling} username={username} password={password} nocache={nocache} />\n  );\n}\n\nexport default AppDiagramExplorer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppDiagramExplorer from './App';\n\nReactDOM.render(<AppDiagramExplorer  />, document.getElementById('diagramExplorer'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}